Ext.data.JsonP.BasiGX_util_CSRF({"tagname":"class","name":"BasiGX.util.CSRF","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"CSRF.js","href":"CSRF.html#BasiGX-util-CSRF"}],"aliases":{},"alternateClassNames":[],"extends":"Ext.Base","mixins":[],"requires":["Ext.DomQuery","Ext.String"],"uses":[],"members":[{"name":"getContentFromMetaTagByName","tagname":"method","owner":"BasiGX.util.CSRF","id":"static-method-getContentFromMetaTagByName","meta":{"private":true,"static":true}},{"name":"getDomHelperField","tagname":"method","owner":"BasiGX.util.CSRF","id":"static-method-getDomHelperField","meta":{"static":true}},{"name":"getHeader","tagname":"method","owner":"BasiGX.util.CSRF","id":"static-method-getHeader","meta":{"static":true}},{"name":"getKey","tagname":"method","owner":"BasiGX.util.CSRF","id":"static-method-getKey","meta":{"static":true}},{"name":"getParamName","tagname":"method","owner":"BasiGX.util.CSRF","id":"static-method-getParamName","meta":{"static":true}},{"name":"getValue","tagname":"method","owner":"BasiGX.util.CSRF","id":"static-method-getValue","meta":{"static":true}}],"code_type":"ext_define","id":"class-BasiGX.util.CSRF","short_doc":"CSRF Utility methods. ...","component":false,"superclasses":["Ext.Base"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>Ext.Base<div class='subclass '><strong>BasiGX.util.CSRF</strong></div></div><h4>Requires</h4><div class='dependency'>Ext.DomQuery</div><div class='dependency'>Ext.String</div><h4>Files</h4><div class='dependency'><a href='source/CSRF.html#BasiGX-util-CSRF' target='_blank'>CSRF.js</a></div></pre><div class='doc-contents'><p>CSRF Utility methods.</p>\n\n<p>Some methods to access the csrf-token information served by spring security.</p>\n\n<p>The methods herein assume a certain HTML structure, which is easiest achieved\nby including a markup like the following in your base HTML:</p>\n\n<pre><code>&lt;meta name=\"_csrf\" content=\"${_csrf.token}\" /&gt;\n&lt;meta name=\"_csrf_header\" content=\"${_csrf.headerName}\" /&gt;\n&lt;meta name=\"_csrf_parameter_name\" content=\"${_csrf.parameterName}\" /&gt;\n</code></pre>\n\n<p>All methods will warn if the structure in the DOM is not as expected.</p>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static methods</h3><div id='static-method-getContentFromMetaTagByName' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BasiGX.util.CSRF'>BasiGX.util.CSRF</span><br/><a href='source/CSRF.html#BasiGX-util-CSRF-static-method-getContentFromMetaTagByName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/BasiGX.util.CSRF-static-method-getContentFromMetaTagByName' class='name expandable'>getContentFromMetaTagByName</a>( <span class='pre'>name</span> ) : String<span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'>A utility method to get the content attribute of a &lt;meta&gt;-tag\nwith the given name. ...</div><div class='long'><p>A utility method to get the <code>content</code> attribute of a <code>&lt;meta&gt;</code>-tag\nwith the given name. Will issue a warning to the console if the\ntag cannot be found.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The name of the <code>&lt;meta&gt;</code>-tag we look for.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The content attribute of the <code>&lt;meta&gt;</code>-tag, or the\n    empty string if the tag was not found.</p>\n</div></li></ul></div></div></div><div id='static-method-getDomHelperField' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BasiGX.util.CSRF'>BasiGX.util.CSRF</span><br/><a href='source/CSRF.html#BasiGX-util-CSRF-static-method-getDomHelperField' target='_blank' class='view-source'>view source</a></div><a href='#!/api/BasiGX.util.CSRF-static-method-getDomHelperField' class='name expandable'>getDomHelperField</a>( <span class='pre'></span> ) : Object<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Returns an Ext.dom.Helper specification for adding an\n&lt;input type=\"hidden\"&gt; that contains the relevant CSRF inf...</div><div class='long'><p>Returns an <code>Ext.dom.Helper</code> specification for adding an\n<code>&lt;input type=\"hidden\"&gt;</code> that contains the relevant CSRF information.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>A specification for a correctly configured hidden\n    input field for sending the CSRF information or such a\n    specification without <code>name</code> and <code>value</code> if any of the required\n    meta fields cannot be found.</p>\n</div></li></ul></div></div></div><div id='static-method-getHeader' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BasiGX.util.CSRF'>BasiGX.util.CSRF</span><br/><a href='source/CSRF.html#BasiGX-util-CSRF-static-method-getHeader' target='_blank' class='view-source'>view source</a></div><a href='#!/api/BasiGX.util.CSRF-static-method-getHeader' class='name expandable'>getHeader</a>( <span class='pre'></span> ) : Object<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Get the full CSRF token object. ...</div><div class='long'><p>Get the full CSRF token object. Can directly be used for AJAX queries\ne.g. by passing them as <code>header</code> config to <code>Ext.Ajax.request</code>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>header - the header containing the CSRF key and\n    value or an empty object if any of the required meta fields\n    cannot be found.</p>\n</div></li></ul></div></div></div><div id='static-method-getKey' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BasiGX.util.CSRF'>BasiGX.util.CSRF</span><br/><a href='source/CSRF.html#BasiGX-util-CSRF-static-method-getKey' target='_blank' class='view-source'>view source</a></div><a href='#!/api/BasiGX.util.CSRF-static-method-getKey' class='name expandable'>getKey</a>( <span class='pre'></span> ) : String<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Get the CSRF token key. ...</div><div class='long'><p>Get the CSRF token key. This can be used if you want to send CSRF\ntokens as header. If you want to send it using a form parameter, use\nthe method <a href=\"#!/api/BasiGX.util.CSRF-static-method-getParamName\" rel=\"BasiGX.util.CSRF-static-method-getParamName\" class=\"docClass\">getParamName</a> instead.</p>\n\n<p>In order for this method to produce reliable output, your base HTML\npage should contain a <code>&lt;meta&gt;</code>-tag in the <code>&lt;head&gt;</code> with name\n<code>_csrf_header</code>. The <code>content</code> attribute is best filled from Spring by\nusing this variable: <code>${_csrf.headerName}</code>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><ul>\n<li>the key string, e.g. \"X-CSRF-TOKEN\" ort the empty\n  string if the meta tag cannot be found.</li>\n</ul>\n\n</div></li></ul></div></div></div><div id='static-method-getParamName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BasiGX.util.CSRF'>BasiGX.util.CSRF</span><br/><a href='source/CSRF.html#BasiGX-util-CSRF-static-method-getParamName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/BasiGX.util.CSRF-static-method-getParamName' class='name expandable'>getParamName</a>( <span class='pre'></span> ) : String<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Get the name of the parameter to send when you want to pass CSRF\ntokens via a form. ...</div><div class='long'><p>Get the name of the parameter to send when you want to pass CSRF\ntokens via a form. Alternatively you can use <a href=\"#!/api/BasiGX.util.CSRF-static-method-getKey\" rel=\"BasiGX.util.CSRF-static-method-getKey\" class=\"docClass\">getKey</a> to get the name\nof the header to send for CSRF-protection.</p>\n\n<p>In order for this method to produce reliable output, your base HTML\npage should contain a <code>&lt;meta&gt;</code>-tag in the <code>&lt;head&gt;</code> with name\n<code>_csrf_parameter_name</code>. The <code>content</code> attribute is best filled from\nSpring by using this variable: <code>${_csrf.parameterName}</code>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The name of the parameter to send when sending CSRF\n    tokens via forms, e.g. \"_csrf\" or the empty string if the meta\n    tag cannot be found.</p>\n</div></li></ul></div></div></div><div id='static-method-getValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BasiGX.util.CSRF'>BasiGX.util.CSRF</span><br/><a href='source/CSRF.html#BasiGX-util-CSRF-static-method-getValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/BasiGX.util.CSRF-static-method-getValue' class='name expandable'>getValue</a>( <span class='pre'></span> ) : String<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Get the CSRF token value. ...</div><div class='long'><p>Get the CSRF token value.</p>\n\n<p>In order for this method to produce reliable output, your base HTML\npage should contain a <code>&lt;meta&gt;</code>-tag in the <code>&lt;head&gt;</code> with name\n<code>_csrf</code>. The <code>content</code> attribute is best filled from Spring by\nusing this variable: <code>${_csrf.token}</code>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><ul>\n<li>the key value, e.g. \"741a3b1-221f-4d1d-...\" or the\n  empty string if the meta tag cannot be found.</li>\n</ul>\n\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});