Ext.data.JsonP.BasiGX_util_Digitize({"tagname":"class","name":"BasiGX.util.Digitize","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"Digitize.js","href":"Digitize.html#BasiGX-util-Digitize"}],"aliases":{},"alternateClassNames":[],"extends":"Ext.Base","mixins":[],"requires":[],"uses":[],"members":[{"name":"getFeatureFromClone","tagname":"method","owner":"BasiGX.util.Digitize","id":"static-method-getFeatureFromClone","meta":{"static":true}},{"name":"stringDivider","tagname":"method","owner":"BasiGX.util.Digitize","id":"static-method-stringDivider","meta":{"static":true}}],"code_type":"ext_define","id":"class-BasiGX.util.Digitize","component":false,"superclasses":["Ext.Base"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>Ext.Base<div class='subclass '><strong>BasiGX.util.Digitize</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Digitize.html#BasiGX-util-Digitize' target='_blank'>Digitize.js</a></div></pre><div class='doc-contents'>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static methods</h3><div id='static-method-getFeatureFromClone' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BasiGX.util.Digitize'>BasiGX.util.Digitize</span><br/><a href='source/Digitize.html#BasiGX-util-Digitize-static-method-getFeatureFromClone' target='_blank' class='view-source'>view source</a></div><a href='#!/api/BasiGX.util.Digitize-static-method-getFeatureFromClone' class='name expandable'>getFeatureFromClone</a>( <span class='pre'>collection, clone</span> ) : ol.Feature<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>collection</span> : ol.Collection<div class='sub-desc'><p>The feature collection to find in.</p>\n</div></li><li><span class='pre'>clone</span> : ol.Feature<div class='sub-desc'><p>The cloned feature to get the feature from.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>ol.Feature</span><div class='sub-desc'><p>The final feature derived from the <code>clone</code>.</p>\n</div></li></ul></div></div></div><div id='static-method-stringDivider' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BasiGX.util.Digitize'>BasiGX.util.Digitize</span><br/><a href='source/Digitize.html#BasiGX-util-Digitize-static-method-stringDivider' target='_blank' class='view-source'>view source</a></div><a href='#!/api/BasiGX.util.Digitize-static-method-stringDivider' class='name expandable'>stringDivider</a>( <span class='pre'>str, width, spaceReplacer</span> ) : String<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Returns a string that is wrapped: every ~width chars a space is\nreplaced with the passed spaceReplacer. ...</div><div class='long'><p>Returns a string that is wrapped: every ~<code>width</code> chars a space is\nreplaced with the passed <code>spaceReplacer</code>.</p>\n\n<p>See\n http://stackoverflow.com/questions/14484787/wrap-text-in-javascript</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>str</span> : String<div class='sub-desc'><p>The string to wrap.</p>\n</div></li><li><span class='pre'>width</span> : Number<div class='sub-desc'><p>The width of a line (number of characters).</p>\n</div></li><li><span class='pre'>spaceReplacer</span> : String<div class='sub-desc'><p>The string to replace spaces with.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The 'wrapped' string.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});