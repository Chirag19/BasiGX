Ext.data.JsonP.BasiGX_util_Color({"tagname":"class","name":"BasiGX.util.Color","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"Color.js","href":"Color.html#BasiGX-util-Color"}],"aliases":{},"alternateClassNames":[],"extends":"Ext.Base","mixins":[],"requires":[],"uses":[],"members":[{"name":"hex8ToRgba","tagname":"method","owner":"BasiGX.util.Color","id":"static-method-hex8ToRgba","meta":{"static":true}},{"name":"hexToRgba","tagname":"method","owner":"BasiGX.util.Color","id":"static-method-hexToRgba","meta":{"static":true}},{"name":"makeHex","tagname":"method","owner":"BasiGX.util.Color","id":"static-method-makeHex","meta":{"static":true}},{"name":"rgbaAsArray","tagname":"method","owner":"BasiGX.util.Color","id":"static-method-rgbaAsArray","meta":{"static":true}},{"name":"rgbaToHex","tagname":"method","owner":"BasiGX.util.Color","id":"static-method-rgbaToHex","meta":{"static":true}},{"name":"rgbaToHex8","tagname":"method","owner":"BasiGX.util.Color","id":"static-method-rgbaToHex8","meta":{"static":true}}],"code_type":"ext_define","id":"class-BasiGX.util.Color","component":false,"superclasses":["Ext.Base"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>Ext.Base<div class='subclass '><strong>BasiGX.util.Color</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Color.html#BasiGX-util-Color' target='_blank'>Color.js</a></div></pre><div class='doc-contents'>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static methods</h3><div id='static-method-hex8ToRgba' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BasiGX.util.Color'>BasiGX.util.Color</span><br/><a href='source/Color.html#BasiGX-util-Color-static-method-hex8ToRgba' target='_blank' class='view-source'>view source</a></div><a href='#!/api/BasiGX.util.Color-static-method-hex8ToRgba' class='name expandable'>hex8ToRgba</a>( <span class='pre'>hex8</span> ) : String<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>This method converts a hex color string into an rgba color string. ...</div><div class='long'><p>This method converts a hex color string into an rgba color string.</p>\n\n<p>Example:</p>\n\n<pre><code>var rgba = <a href=\"#!/api/BasiGX.util.Color-static-method-hex8ToRgba\" rel=\"BasiGX.util.Color-static-method-hex8ToRgba\" class=\"docClass\">BasiGX.util.Color.hex8ToRgba</a>(\"#ff000000\");\n// rgba is now: \"rgba(255,0,0,0)\"\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>hex8</span> : String<div class='sub-desc'><p>The hex8 string to convert.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>A <code>rgba(r,g,b,a)</code> color string.</p>\n</div></li></ul></div></div></div><div id='static-method-hexToRgba' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BasiGX.util.Color'>BasiGX.util.Color</span><br/><a href='source/Color.html#BasiGX-util-Color-static-method-hexToRgba' target='_blank' class='view-source'>view source</a></div><a href='#!/api/BasiGX.util.Color-static-method-hexToRgba' class='name expandable'>hexToRgba</a>( <span class='pre'>hex, opacity</span> ) : String<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>This method converts a hex color string into an rgba color string. ...</div><div class='long'><p>This method converts a hex color string into an rgba color string.</p>\n\n<p>Example:</p>\n\n<pre><code>var rgba = <a href=\"#!/api/BasiGX.util.Color-static-method-hexToRgba\" rel=\"BasiGX.util.Color-static-method-hexToRgba\" class=\"docClass\">BasiGX.util.Color.hexToRgba</a>(\"#ff0000\", 0.5);\n// rgba is now: \"rgba(255,0,0,0.5)\"\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>hex</span> : String<div class='sub-desc'><p>The hex string to convert.</p>\n</div></li><li><span class='pre'>opacity</span> : Number<div class='sub-desc'><p>The opacity to set, should be between <code>0</code> and\n    <code>1</code>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>A <code>rgba(r,g,b,a)</code> color string.</p>\n</div></li></ul></div></div></div><div id='static-method-makeHex' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BasiGX.util.Color'>BasiGX.util.Color</span><br/><a href='source/Color.html#BasiGX-util-Color-static-method-makeHex' target='_blank' class='view-source'>view source</a></div><a href='#!/api/BasiGX.util.Color-static-method-makeHex' class='name expandable'>makeHex</a>( <span class='pre'>numStr</span> ) : String<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Returns the two digit hexadecimal value of the passed number string\n(between '0' and '255'). ...</div><div class='long'><p>Returns the two digit hexadecimal value of the passed number string\n(between <code>'0'</code> and <code>'255'</code>).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>numStr</span> : String<div class='sub-desc'><p>The number to convert as a string.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The hexadecimal number.</p>\n</div></li></ul></div></div></div><div id='static-method-rgbaAsArray' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BasiGX.util.Color'>BasiGX.util.Color</span><br/><a href='source/Color.html#BasiGX-util-Color-static-method-rgbaAsArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/BasiGX.util.Color-static-method-rgbaAsArray' class='name expandable'>rgbaAsArray</a>( <span class='pre'>rgba</span> ) : Array<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Returns an array of the parts of an rgba(r,g,b,a) string as array. ...</div><div class='long'><p>Returns an array of the parts of an <code>rgba(r,g,b,a)</code> string as array.\nThe index <code>1</code> will be <code>r</code>, <code>2</code> will be <code>g</code>, <code>3</code> will be <code>b</code> and\n<code>4</code> will be <code>a</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rgba</span> : String<div class='sub-desc'><p>An <code>rgba(r,g,b,a)</code> string.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>An array with the parts of the rgba-string.</p>\n</div></li></ul></div></div></div><div id='static-method-rgbaToHex' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BasiGX.util.Color'>BasiGX.util.Color</span><br/><a href='source/Color.html#BasiGX-util-Color-static-method-rgbaToHex' target='_blank' class='view-source'>view source</a></div><a href='#!/api/BasiGX.util.Color-static-method-rgbaToHex' class='name expandable'>rgbaToHex</a>( <span class='pre'>rgba</span> ) : String<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>This method converts a rgba color string into an hex6 color string. ...</div><div class='long'><p>This method converts a rgba color string into an hex6 color string.\nWarning: You will loose the alpha channel when using this method.</p>\n\n<p>Example:</p>\n\n<pre><code>var hex = <a href=\"#!/api/BasiGX.util.Color-static-method-rgbaToHex\" rel=\"BasiGX.util.Color-static-method-rgbaToHex\" class=\"docClass\">BasiGX.util.Color.rgbaToHex</a>(\"rgba(255,0,0,0)\");\n// hex is now: \"#ff0000\"\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rgba</span> : String<div class='sub-desc'><p>A <code>rgba(r,g,b,a)</code> color string.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>A hexadecimal color string, e.g. <code>#ff0000</code>.</p>\n</div></li></ul></div></div></div><div id='static-method-rgbaToHex8' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BasiGX.util.Color'>BasiGX.util.Color</span><br/><a href='source/Color.html#BasiGX-util-Color-static-method-rgbaToHex8' target='_blank' class='view-source'>view source</a></div><a href='#!/api/BasiGX.util.Color-static-method-rgbaToHex8' class='name expandable'>rgbaToHex8</a>( <span class='pre'>rgba</span> ) : String<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>This method converts a rgba color string into an hex8 color string. ...</div><div class='long'><p>This method converts a rgba color string into an hex8 color string.</p>\n\n<p>Example:\n    var hex = <a href=\"#!/api/BasiGX.util.Color-static-method-rgbaToHex\" rel=\"BasiGX.util.Color-static-method-rgbaToHex\" class=\"docClass\">BasiGX.util.Color.rgbaToHex</a>(\"rgba(255,0,0,0)\");\n    // hex is now: \"#ff000000\"</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rgba</span> : String<div class='sub-desc'><p>A <code>rgba(r,g,b,a)</code> color string.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>A hex8 color string, with alpha; e.g. <code>#ff000000</code>.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});